{"version":3,"sources":["hooks/useLocalStorage.js","components/ModalBox.js","components/Homepage.js","fonts/JetBrainsMono[wght].ttf","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","ModalBox","props","newSessionId","setNewSessionId","userCode","setJoinedSessionCode","className","onClick","document","getElementsByClassName","id","clear","window","location","reload","navigator","clipboard","writeText","placeholder","onChange","event","target","languages","socket","openSocket","modes","javascript","c_cpp","python","defaultCode","Homepage","setUserCode","mode","setMode","code","setCode","input","setInput","joinedSessionCode","output","setOutput","onkeydown","keyDownEvent","altKey","getElementById","click","now","Date","storeTime","Math","ceil","abs","axios","get","then","data","emit","channelID","catch","e","console","log","getTime","on","close","open","defaultValue","map","lang","toUpperCase","post","language","toString","theme","height","width","fontSize","showPrintMargin","val","name","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","highlightActiveLine","readOnly","fontFamily","showGutter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3e86806a.chunk.js","sourcesContent":["// imports\nimport { useState, useEffect } from 'react'\n\n// identifying prefix for keys in localStorage\nconst PREFIX = 'na-rce-'\n\n// custom hook\n// stores state variables in localStorage as well when their value is set\nconst useLocalStorage = (key, initialValue) => {\n  const prefixedKey = PREFIX + key\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    // if localStorage has a value at the key, return the parsed value\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    // if initialValue is a function, return the evaluated value\n    if (typeof initialValue === 'function') return initialValue()\n    // else return the initialValue itself\n    else return initialValue\n  })\n\n  // handle changes by storing value in localStorage\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n\nexport default useLocalStorage\n","import React, { useState } from 'react'\n\nconst ModalBox = (props) => {\n  const [newSessionId, setNewSessionId] = useState('')\n  const { userCode, setJoinedSessionCode } = props\n  return (\n    <div className='modal-box'>\n      <div className='modal-btn-bar'>\n        <button\n          className='nav-btn'\n          onClick={() => {\n            document.getElementsByClassName('modal-bg')[0].id = 'hidden'\n          }}\n        >\n          <h2>CLOSE</h2>\n        </button>\n        <button\n          className='nav-btn'\n          onClick={() => {\n            localStorage.clear()\n            window.location.reload()\n          }}\n        >\n          <h2>CLEAR DATA</h2>\n        </button>\n      </div>\n      <h2 className='modal-title'>YOUR SESSION:</h2>\n      <div className='modal-current-session'>\n        <h3>Current session id is {userCode}</h3>\n        <button\n          className='nav-btn'\n          onClick={() => {\n            navigator.clipboard.writeText(userCode)\n          }}\n        >\n          <h3>(COPY)</h3>\n        </button>\n      </div>\n      <h2 className='modal-new-session'>JOIN A SESSION?</h2>\n      <div className='modal-current-session'>\n        <input\n          id='modal-session-input'\n          placeholder='Enter a session id'\n          onChange={(event) => {\n            setNewSessionId(event.target.value)\n          }}\n        ></input>\n        <button\n          className='nav-btn'\n          onClick={() => {\n            setJoinedSessionCode(newSessionId)\n          }}\n        >\n          <h3>(JOIN)</h3>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalBox\n","// imports\n// react\nimport React, { useEffect, useState } from 'react'\n// libraries\nimport AceEditor from 'react-ace'\nimport axios from 'axios'\nimport openSocket from 'socket.io-client'\n// ace\nimport 'ace-builds/src-noconflict/mode-python'\nimport 'ace-builds/src-noconflict/mode-c_cpp'\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport 'ace-builds/src-noconflict/ext-language_tools'\nimport 'ace-builds/src-noconflict/theme-cobalt'\n// custom\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport ModalBox from './ModalBox'\n// style\nimport '../fonts/JetBrainsMono[wght].ttf'\nimport './Homepage.css'\n\n// global vars\nvar languages = ['python', 'c_cpp', 'javascript']\nconst socket = openSocket('http://13.126.57.93')\nconst modes = { javascript: 'js', c_cpp: 'cpp', python: 'py' }\nconst defaultCode = {\n  javascript: \"console.log('hello rce')\",\n  c_cpp:\n    '#include <iostream>\\n\\nint main() {\\n\\tstd::cout << \"hello rce\";\\n\\treturn 0;\\n}',\n  python: \"print('hello rce')\",\n}\n\n// component\nconst Homepage = () => {\n  // cached state vars\n  const [userCode, setUserCode] = useLocalStorage('userCode', '')\n  const [mode, setMode] = useLocalStorage('mode', 'python')\n  const [code, setCode] = useLocalStorage('code', defaultCode[mode])\n  const [input, setInput] = useLocalStorage('input', '')\n  const [joinedSessionCode, setJoinedSessionCode] = useLocalStorage(\n    'joinedSessionCode',\n    ''\n  )\n  // non cached state vars\n  const [output, setOutput] = useState('')\n\n  useEffect(() => {\n    document.onkeydown = (keyDownEvent) => {\n      if (keyDownEvent.altKey && keyDownEvent.key == 'F5')\n        document.getElementById('run-btn').click()\n    }\n  })\n\n  // on load effect\n  useEffect(() => {\n    var now = new Date()\n    var storeTime = JSON.parse(localStorage.getItem('na-rce-storeTime'))\n    if (Math.ceil(Math.abs(now - storeTime) / (1000 * 60 * 60 * 24)) > 1) {\n      setUserCode('')\n      setJoinedSessionCode('')\n      axios\n        .get('http://13.126.57.93/code')\n        .then(({ data }) => {\n          setUserCode(data)\n\n          socket.emit('hostSession', {\n            channelID: data,\n          })\n        })\n        .catch((e) => console.log('error', e))\n      localStorage.setItem(\n        'na-rce-storeTime',\n        JSON.stringify(new Date().getTime())\n      )\n    }\n    if (userCode === '') {\n      axios\n        .get('http://13.126.57.93/code')\n        .then(({ data }) => {\n          setUserCode(data)\n\n          socket.emit('hostSession', {\n            channelID: data,\n          })\n        })\n        .catch((e) => console.log('error', e))\n    }\n  }, [])\n\n  // on change in [joinedSessionCode] effect\n  useEffect(() => {\n    console.log(joinedSessionCode)\n    socket.emit('joinSession', {\n      channelID: joinedSessionCode,\n    })\n  }, [joinedSessionCode])\n\n  // on change in [code, output, mode, input, userCode, joinedSessionCode] effect\n  useEffect(() => {\n    if (!joinedSessionCode) {\n      socket.emit('realtime', {\n        channelID: userCode,\n        mode,\n        code,\n        input,\n        output,\n      })\n      socket.on('initialLoad', () => {\n        socket.emit('realtime', {\n          channelID: userCode,\n          mode,\n          code,\n          input,\n          output,\n        })\n      })\n    }\n  }, [code, output, mode, input, userCode, joinedSessionCode])\n\n  // on change in [joinedSessionCode] effect\n  useEffect(() => {\n    if (joinedSessionCode) {\n      socket.on('realReceive', (data) => {\n        setMode(data.mode)\n        setInput(data.input)\n        setOutput(data.output)\n        setCode(data.code)\n      })\n    }\n  }, [joinedSessionCode])\n\n  // language select handler\n  const modeHandle = (e) => {\n    setCode(defaultCode[e.target.value])\n    setMode(e.target.value)\n  }\n\n  // code run button handler\n  const handlerun = () => {\n    axios\n      .post('http://13.126.57.93/code', {\n        key: userCode,\n        language: modes[mode],\n        input: input,\n        code: code,\n      })\n      .then(({ data }) => {\n        setOutput(data.toString())\n      })\n  }\n\n  // component return\n  return (\n    <>\n      <div className='modal-bg' id='hidden'>\n        <ModalBox\n          userCode={userCode}\n          setJoinedSessionCode={setJoinedSessionCode}\n        />\n      </div>\n      <div className='nav'>\n        <h1 id='brand'>\n          {' '}\n          &gt;codeBox{' '}\n          {joinedSessionCode !== '' ? 'joined: ' + joinedSessionCode : ''}\n        </h1>\n        <div id='navigation'>\n          {joinedSessionCode !== '' ? (\n            <button\n              className='nav-btn'\n              onClick={() => {\n                socket.close()\n                setJoinedSessionCode('')\n                setInput('')\n                setOutput('')\n                setCode(defaultCode[mode])\n                window.location.reload()\n              }}\n            >\n              <h2>disconnect</h2>\n            </button>\n          ) : (\n            <></>\n          )}\n          <button\n            className='nav-btn'\n            onClick={() => {\n              document.getElementsByClassName('modal-bg')[0].id = ''\n            }}\n          >\n            <h2>session</h2>\n          </button>\n          <button\n            className='nav-btn'\n            onClick={() =>\n              window.open(\n                'https://github.com/nafees87n/remote-code-executor/blob/main/docs/'\n              )\n            }\n          >\n            <h2>docs</h2>\n          </button>\n          <button\n            className='nav-btn'\n            onClick={() =>\n              window.open('https://github.com/nafees87n/remote-code-executor')\n            }\n          >\n            <h2>github</h2>\n          </button>\n        </div>\n      </div>\n      <div className='code-region'>\n        <div id='code-header'>\n          <h2 className='region-title'>code</h2>\n          <h2 className='region-title-divider'>|</h2>\n          {joinedSessionCode === '' ? (\n            <>\n              <select\n                id='language-select'\n                defaultValue={mode}\n                value={mode}\n                onChange={modeHandle}\n              >\n                {languages.map((lang) => {\n                  return (\n                    <option key={lang} value={lang}>\n                      {lang.toUpperCase()}\n                    </option>\n                  )\n                })}\n              </select>\n              <h2 className='region-title-divider'>|</h2>\n              <button id='run-btn' onClick={handlerun}>\n                RUN (ALT + F5)\n              </button>{' '}\n            </>\n          ) : (\n            <>\n              <h2 className='region-title'>{mode}</h2>\n            </>\n          )}\n        </div>\n        <div className='general-editor'>\n          <AceEditor\n            mode={mode}\n            theme='cobalt'\n            height='100%'\n            width='2fr'\n            value={code}\n            fontSize={18}\n            showPrintMargin={false}\n            onChange={(val) => setCode(val)}\n            name='code_editor'\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n            }}\n            highlightActiveLine={joinedSessionCode === '' ? true : false}\n            readOnly={joinedSessionCode === '' ? false : true}\n            setOptions={{\n              fontFamily: 'JetBrains Mono',\n            }}\n          />\n        </div>\n      </div>\n      <div className='input-region'>\n        <div id='code-header'>\n          <h2 className='region-title'>input</h2>\n        </div>\n        <div className='general-editor'>\n          <AceEditor\n            mode='text'\n            theme='cobalt'\n            height='100%'\n            width='1fr'\n            value={input}\n            name='input_editor'\n            onChange={(val) => setInput(val)}\n            fontSize={18}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={joinedSessionCode === '' ? true : false}\n            readOnly={joinedSessionCode === '' ? false : true}\n            setOptions={{\n              fontFamily: 'JetBrains Mono',\n            }}\n          />\n        </div>\n      </div>\n      <div className='output-region'>\n        <div id='code-header'>\n          <h2 className='region-title'>output</h2>\n        </div>\n        <div className='general-editor'>\n          <AceEditor\n            mode='text'\n            theme='cobalt'\n            height='100%'\n            width='1fr'\n            value={output}\n            name='output_editor'\n            fontSize={18}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            readOnly={true}\n            setOptions={{\n              fontFamily: 'JetBrains Mono',\n            }}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Homepage\n","export default __webpack_public_path__ + \"static/media/JetBrainsMono[wght].f376b9c5.ttf\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Homepage from './components/Homepage'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Homepage />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}